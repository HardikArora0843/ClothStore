

1. DO npm init , WHICH WILL MAKE package.json
2. NOW TO INSTALL DEPENDENCIES DO npm i cors dotenv express jsonwebtoken mongoose multer nodemon razorpay stripe validator cloudinary bcrypt

3. cors ALLOWS THE FRONTEND IP TO ACCESS THE BACKEND, BY dotenv WE CAN USE ENVIRONMENT VARIABLES , BY express WE CAN USE APIs , BY jsonwebtoken WE CAN USE USER AUTHENTICATION, BY mongoose IT WILL MANAGE DATABASE , multer ALLOWS TO STORE IMAGES ON OUR CLOUDINARY SERVER, BY nodemon IT WILL RESTART THE BACKEND WHEN WE WILL CHANGE THE CODE, validator WILL CHECK DATA OF USER, bcrypt WILL ENCRYPT THE PASSWORD 

4. IN config WE WILL STORE ALL CONFIGURATIONS, IIN middleware WE WILL STORE BACKEND MIDDLEWARE , IN models WE WILL STORE ALL MODELS OF BACKEND WHERE WE WILL DEFINE SCHEMA, IN controllers, WE WILL MANAGE ALL LOGIC OF BACKEND, IN routes FOLDER WE WILL MANAGE THE EXPRESS SERVERS ROUTES

5. NOW IN package.json FILE WE WILL ADD server AND nodemon server.js , WHICH MEANS THAT WHEN WE WILL DO NPM START THEN SERVER.JS WILL RUN AT DEPOLYMENT AND LOCALLY WE WILL USE THAT TO RUN SERVER BY USEING nodemon 

6. NOW ADD THE TYPE MODULE IN package.json BY WHICH NOW WE CAN USE import STATEMENTS IN FILES


7. IN env FILE WE CAN STORE SECRET PASSWORD AND API KEYS

8. WE WILL USE THUNDER CLIENT TO TEST APIs IN VS CODE

9. NOW CREATE NEW PROJECT IN ATLAS AND NEE CLUSTER ALSO. PASTE THE URI TILL .NET IN ENV FILE WITH PASSWORD

10. NOW GO TO CLOUDINARY AND MAKE ACCOUNT AND GO TO DASHBOARD PAGE THEN GO TO API KEYS AND CREATE A NEW ONE AND CLOUDINARY API KEY, SECRET KEY, NAME IN ENV FILE